---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-token-refresher
  name: token-refresher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: token-refresher
  template:
    metadata:
      labels:
        app: token-refresher
    spec:
      containers:
      - name: refresher
        env:
        - name: KTR_SECRETNAME
          value: "bearer-creds"
        - name: KTR_SECRETNAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KTR_SECRETKEY
          value: "token"
        - name: KTR_OIDC_TOKENURL
          value: <token-url>
        - name: KTR_OIDC_CLIENTID
          valueFrom:
            secretKeyRef:
              name: kube-token-refresher
              key: id
        - name: KTR_OIDC_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              name: kube-token-refresher
              key: secret
        image: quay.io/vshn/kube-token-refresher:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 10Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: kube-token-refresher

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-token-refresher

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-token-refresher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-token-refresher
subjects:
- kind: ServiceAccount
  name: kube-token-refresher


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-token-refresher
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - update
